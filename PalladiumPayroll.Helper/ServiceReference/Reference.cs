//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://web.palladium.co.za/", ConfigurationName="ServiceReference.PalladWebWPFSoap")]
    public interface PalladWebWPFSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/ReturnIndividualInstallKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ReturnIndividualInstallKeyAsync(string uidVal, string uidVal2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/Register", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.clRegister> RegisterAsync(
                    string InstallKey, 
                    string HDDSerial, 
                    string ProductID, 
                    string uidVal, 
                    string uidVal2, 
                    string CoName, 
                    string Contact, 
                    string Address, 
                    string City, 
                    string Prov, 
                    string Postal, 
                    string Country, 
                    string Phone, 
                    string Fax, 
                    string Email, 
                    string MachineName, 
                    string OSv, 
                    string SoftV, 
                    int ProductNumber, 
                    bool SEDAClient, 
                    string MajorDivision, 
                    string MajorGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/RegisterManual", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.clRegister> RegisterManualAsync(
                    string InstallKey, 
                    string HDDSerial, 
                    string ProductID, 
                    string uidVal, 
                    string uidVal2, 
                    string CoName, 
                    string Contact, 
                    string Address, 
                    string City, 
                    string Prov, 
                    string Postal, 
                    string Country, 
                    string Phone, 
                    string Fax, 
                    string Email, 
                    string MachineName, 
                    string ActKey, 
                    int ProductNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/ActivateOnly", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.clRegister> ActivateOnlyAsync(string InstallKey, string HDDSerial, string ProductID, string uidVal, string uidVal2, string MachineName, string OSv, string SoftV, string Pwd, int ProductNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/ActivateOnlyManual", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.clRegister> ActivateOnlyManualAsync(string InstallKey, string HDDSerial, string ProductID, string uidVal, string uidVal2, string MachineName, string ActKey, string Pwd, int ProductNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/ReActivation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.clRegister> ReActivationAsync(string InstallKey, string HDDSerial, string ProductID, string uidVal, string uidVal2, string MachineName, string OSv, string SoftV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/DeActivation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.clRegister> DeActivationAsync(string InstallKey, string HDDSerial, string ProductID, string uidVal, string uidVal2, string MachineName, string OSv, string SoftV);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/ChangeActPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.clRegister> ChangeActPasswordAsync(string InstallKey, string uidVal, string uidVal2, string OldPwd, string NewPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/ErrorReport2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task ErrorReport2Async(string uidVal, string uidVal2, string EmailAddress, string vMessage, string vStack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/ErrorReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task ErrorReportAsync(string uidVal, string uidVal2, string vMessage, string vStack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/FindDealers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.ArrayOfXElement> FindDealersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/FindAccountants", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.ArrayOfXElement> FindAccountantsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/FindDealers2012", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.ArrayOfXElement> FindDealers2012Async(int intCountryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/FindAccountants2012", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.ArrayOfXElement> FindAccountants2012Async(int intCountryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/UpdatesCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.clUpdate> UpdatesCheckAsync(string uidVal, string uidVal2, int YearRelease, int Product, int BuildOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/UpdatesCheck2023", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.clUpdate> UpdatesCheck2023Async(string uidVal, string uidVal2, int YearRelease, int Product, int BuildOn, int CountryType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/RegisterUsingPrevRelease", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.clRegister> RegisterUsingPrevReleaseAsync(
                    string InstallKeyPrev, 
                    string InstallKey, 
                    string HDDSerial, 
                    string ProductID, 
                    string uidVal, 
                    string uidVal2, 
                    string CoName, 
                    string Contact, 
                    string Address, 
                    string City, 
                    string Prov, 
                    string Postal, 
                    string Country, 
                    string Phone, 
                    string Fax, 
                    string Email, 
                    string MachineName, 
                    string OSv, 
                    string SoftV, 
                    int ProductNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/ReturnProductActiveFlag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> ReturnProductActiveFlagAsync(string InstallKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/GetUsersCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.GetUsersCountResponseGetUsersCountResult> GetUsersCountAsync(string stryKeyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/GetRegisteredUserDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.GetRegisteredUserDetailsResponseGetRegisteredUserDetailsResult> GetRegisteredUserDetailsAsync(string stryKeyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/GetActivatedUserDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.GetActivatedUserDetailsResponseGetActivatedUserDetailsResult> GetActivatedUserDetailsAsync(string stryKeyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/GetExpirationDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference.GetExpirationDateResponseGetExpirationDateResult> GetExpirationDateAsync(string stryKeyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.palladium.co.za/SendMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> SendMailAsync(string strMailId, string strMessageBody, string strSubject);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://web.palladium.co.za/")]
    public partial class clRegister
    {
        
        private bool successField;
        
        private string companyNameField;
        
        private string passwordField;
        
        private string errorMessageField;
        
        private string activationCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CompanyName
        {
            get
            {
                return this.companyNameField;
            }
            set
            {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ErrorMessage
        {
            get
            {
                return this.errorMessageField;
            }
            set
            {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ActivationCode
        {
            get
            {
                return this.activationCodeField;
            }
            set
            {
                this.activationCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://web.palladium.co.za/")]
    public partial class clUpdate
    {
        
        private bool updateAvailableField;
        
        private int majorField;
        
        private int minorField;
        
        private int buildField;
        
        private int dBVersionField;
        
        private string buildStringField;
        
        private System.DateTime datePublishedField;
        
        private bool canAutoUpdateField;
        
        private string fileLocationField;
        
        private string notesField;
        
        private byte[] versionHistoryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool UpdateAvailable
        {
            get
            {
                return this.updateAvailableField;
            }
            set
            {
                this.updateAvailableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Major
        {
            get
            {
                return this.majorField;
            }
            set
            {
                this.majorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Minor
        {
            get
            {
                return this.minorField;
            }
            set
            {
                this.minorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Build
        {
            get
            {
                return this.buildField;
            }
            set
            {
                this.buildField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int DBVersion
        {
            get
            {
                return this.dBVersionField;
            }
            set
            {
                this.dBVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string BuildString
        {
            get
            {
                return this.buildStringField;
            }
            set
            {
                this.buildStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime DatePublished
        {
            get
            {
                return this.datePublishedField;
            }
            set
            {
                this.datePublishedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool CanAutoUpdate
        {
            get
            {
                return this.canAutoUpdateField;
            }
            set
            {
                this.canAutoUpdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string FileLocation
        {
            get
            {
                return this.fileLocationField;
            }
            set
            {
                this.fileLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Notes
        {
            get
            {
                return this.notesField;
            }
            set
            {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=10)]
        public byte[] VersionHistory
        {
            get
            {
                return this.versionHistoryField;
            }
            set
            {
                this.versionHistoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://web.palladium.co.za/")]
    public partial class GetUsersCountResponseGetUsersCountResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://web.palladium.co.za/")]
    public partial class GetRegisteredUserDetailsResponseGetRegisteredUserDetailsResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://web.palladium.co.za/")]
    public partial class GetActivatedUserDetailsResponseGetActivatedUserDetailsResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://web.palladium.co.za/")]
    public partial class GetExpirationDateResponseGetExpirationDateResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public interface PalladWebWPFSoapChannel : ServiceReference.PalladWebWPFSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public partial class PalladWebWPFSoapClient : System.ServiceModel.ClientBase<ServiceReference.PalladWebWPFSoap>, ServiceReference.PalladWebWPFSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PalladWebWPFSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(PalladWebWPFSoapClient.GetBindingForEndpoint(endpointConfiguration), PalladWebWPFSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PalladWebWPFSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PalladWebWPFSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PalladWebWPFSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PalladWebWPFSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PalladWebWPFSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> ReturnIndividualInstallKeyAsync(string uidVal, string uidVal2)
        {
            return base.Channel.ReturnIndividualInstallKeyAsync(uidVal, uidVal2);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.clRegister> RegisterAsync(
                    string InstallKey, 
                    string HDDSerial, 
                    string ProductID, 
                    string uidVal, 
                    string uidVal2, 
                    string CoName, 
                    string Contact, 
                    string Address, 
                    string City, 
                    string Prov, 
                    string Postal, 
                    string Country, 
                    string Phone, 
                    string Fax, 
                    string Email, 
                    string MachineName, 
                    string OSv, 
                    string SoftV, 
                    int ProductNumber, 
                    bool SEDAClient, 
                    string MajorDivision, 
                    string MajorGroup)
        {
            return base.Channel.RegisterAsync(InstallKey, HDDSerial, ProductID, uidVal, uidVal2, CoName, Contact, Address, City, Prov, Postal, Country, Phone, Fax, Email, MachineName, OSv, SoftV, ProductNumber, SEDAClient, MajorDivision, MajorGroup);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.clRegister> RegisterManualAsync(
                    string InstallKey, 
                    string HDDSerial, 
                    string ProductID, 
                    string uidVal, 
                    string uidVal2, 
                    string CoName, 
                    string Contact, 
                    string Address, 
                    string City, 
                    string Prov, 
                    string Postal, 
                    string Country, 
                    string Phone, 
                    string Fax, 
                    string Email, 
                    string MachineName, 
                    string ActKey, 
                    int ProductNumber)
        {
            return base.Channel.RegisterManualAsync(InstallKey, HDDSerial, ProductID, uidVal, uidVal2, CoName, Contact, Address, City, Prov, Postal, Country, Phone, Fax, Email, MachineName, ActKey, ProductNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.clRegister> ActivateOnlyAsync(string InstallKey, string HDDSerial, string ProductID, string uidVal, string uidVal2, string MachineName, string OSv, string SoftV, string Pwd, int ProductNumber)
        {
            return base.Channel.ActivateOnlyAsync(InstallKey, HDDSerial, ProductID, uidVal, uidVal2, MachineName, OSv, SoftV, Pwd, ProductNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.clRegister> ActivateOnlyManualAsync(string InstallKey, string HDDSerial, string ProductID, string uidVal, string uidVal2, string MachineName, string ActKey, string Pwd, int ProductNumber)
        {
            return base.Channel.ActivateOnlyManualAsync(InstallKey, HDDSerial, ProductID, uidVal, uidVal2, MachineName, ActKey, Pwd, ProductNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.clRegister> ReActivationAsync(string InstallKey, string HDDSerial, string ProductID, string uidVal, string uidVal2, string MachineName, string OSv, string SoftV)
        {
            return base.Channel.ReActivationAsync(InstallKey, HDDSerial, ProductID, uidVal, uidVal2, MachineName, OSv, SoftV);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.clRegister> DeActivationAsync(string InstallKey, string HDDSerial, string ProductID, string uidVal, string uidVal2, string MachineName, string OSv, string SoftV)
        {
            return base.Channel.DeActivationAsync(InstallKey, HDDSerial, ProductID, uidVal, uidVal2, MachineName, OSv, SoftV);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.clRegister> ChangeActPasswordAsync(string InstallKey, string uidVal, string uidVal2, string OldPwd, string NewPwd)
        {
            return base.Channel.ChangeActPasswordAsync(InstallKey, uidVal, uidVal2, OldPwd, NewPwd);
        }
        
        public System.Threading.Tasks.Task ErrorReport2Async(string uidVal, string uidVal2, string EmailAddress, string vMessage, string vStack)
        {
            return base.Channel.ErrorReport2Async(uidVal, uidVal2, EmailAddress, vMessage, vStack);
        }
        
        public System.Threading.Tasks.Task ErrorReportAsync(string uidVal, string uidVal2, string vMessage, string vStack)
        {
            return base.Channel.ErrorReportAsync(uidVal, uidVal2, vMessage, vStack);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.ArrayOfXElement> FindDealersAsync()
        {
            return base.Channel.FindDealersAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference.ArrayOfXElement> FindAccountantsAsync()
        {
            return base.Channel.FindAccountantsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference.ArrayOfXElement> FindDealers2012Async(int intCountryType)
        {
            return base.Channel.FindDealers2012Async(intCountryType);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.ArrayOfXElement> FindAccountants2012Async(int intCountryType)
        {
            return base.Channel.FindAccountants2012Async(intCountryType);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.clUpdate> UpdatesCheckAsync(string uidVal, string uidVal2, int YearRelease, int Product, int BuildOn)
        {
            return base.Channel.UpdatesCheckAsync(uidVal, uidVal2, YearRelease, Product, BuildOn);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.clUpdate> UpdatesCheck2023Async(string uidVal, string uidVal2, int YearRelease, int Product, int BuildOn, int CountryType)
        {
            return base.Channel.UpdatesCheck2023Async(uidVal, uidVal2, YearRelease, Product, BuildOn, CountryType);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.clRegister> RegisterUsingPrevReleaseAsync(
                    string InstallKeyPrev, 
                    string InstallKey, 
                    string HDDSerial, 
                    string ProductID, 
                    string uidVal, 
                    string uidVal2, 
                    string CoName, 
                    string Contact, 
                    string Address, 
                    string City, 
                    string Prov, 
                    string Postal, 
                    string Country, 
                    string Phone, 
                    string Fax, 
                    string Email, 
                    string MachineName, 
                    string OSv, 
                    string SoftV, 
                    int ProductNumber)
        {
            return base.Channel.RegisterUsingPrevReleaseAsync(InstallKeyPrev, InstallKey, HDDSerial, ProductID, uidVal, uidVal2, CoName, Contact, Address, City, Prov, Postal, Country, Phone, Fax, Email, MachineName, OSv, SoftV, ProductNumber);
        }
        
        public System.Threading.Tasks.Task<bool> ReturnProductActiveFlagAsync(string InstallKey)
        {
            return base.Channel.ReturnProductActiveFlagAsync(InstallKey);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.GetUsersCountResponseGetUsersCountResult> GetUsersCountAsync(string stryKeyCode)
        {
            return base.Channel.GetUsersCountAsync(stryKeyCode);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.GetRegisteredUserDetailsResponseGetRegisteredUserDetailsResult> GetRegisteredUserDetailsAsync(string stryKeyCode)
        {
            return base.Channel.GetRegisteredUserDetailsAsync(stryKeyCode);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.GetActivatedUserDetailsResponseGetActivatedUserDetailsResult> GetActivatedUserDetailsAsync(string stryKeyCode)
        {
            return base.Channel.GetActivatedUserDetailsAsync(stryKeyCode);
        }
        
        public System.Threading.Tasks.Task<ServiceReference.GetExpirationDateResponseGetExpirationDateResult> GetExpirationDateAsync(string stryKeyCode)
        {
            return base.Channel.GetExpirationDateAsync(stryKeyCode);
        }
        
        public System.Threading.Tasks.Task<int> SendMailAsync(string strMailId, string strMessageBody, string strSubject)
        {
            return base.Channel.SendMailAsync(strMailId, strMessageBody, strSubject);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        #if !NET6_0_OR_GREATER
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        #endif
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PalladWebWPFSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.PalladWebWPFSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PalladWebWPFSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://web.palladium.co.za/PalladWebWPF/PalladWebWPF.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.PalladWebWPFSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://web.palladium.co.za/PalladWebWPF/PalladWebWPF.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            PalladWebWPFSoap,
            
            PalladWebWPFSoap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "8.0.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
